# Default values for async-toolformer-orchestrator
# This is a YAML-formatted file.

replicaCount: 3

image:
  repository: ghcr.io/yourusername/async-toolformer-orchestrator
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Service configuration
service:
  type: ClusterIP
  port: 8000
  targetPort: 8000
  annotations: {}

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: api.async-toolformer.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: async-toolformer-tls
      hosts:
        - api.async-toolformer.com

# Resource configuration
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 1000m
    memory: 2Gi

# Horizontal Pod Autoscaler
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 20
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

# Vertical Pod Autoscaler
vpa:
  enabled: false
  updateMode: "Off"  # Off, Initial, or Auto

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Security Context
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL
  runAsNonRoot: true
  runAsUser: 1000

# Application configuration
config:
  # Orchestrator settings
  orchestrator:
    maxParallelTools: 30
    toolTimeoutMs: 10000
    totalTimeoutMs: 60000
    retryAttempts: 3
    enableSpeculation: true
    enableResultStreaming: true
  
  # Rate limiting
  rateLimiting:
    enabled: true
    globalMax: 1000
    useRedis: true
    backpressureStrategy: "adaptive"
  
  # Observability
  observability:
    enableTracing: true
    enableMetrics: true
    tracingSamplingRate: 0.1
    metricsPort: 9090
  
  # Security
  security:
    enableAuthentication: true
    enableAuthorization: true
    encryptionAtRest: true
    encryptionInTransit: true

# Environment variables
env:
  - name: ENVIRONMENT
    value: "production"
  - name: LOG_LEVEL
    value: "INFO"
  - name: REDIS_URL
    value: "redis://redis:6379"
  - name: PROMETHEUS_ENDPOINT
    value: "http://prometheus:9090"

# Environment variables from secrets
envFromSecret:
  - secretRef:
      name: async-toolformer-secrets

# Persistent Volume Claims
persistence:
  enabled: true
  storageClass: "fast-ssd"
  accessMode: ReadWriteOnce
  size: 10Gi
  annotations: {}

# Monitoring and Health Checks
livenessProbe:
  httpGet:
    path: /health
    port: 8000
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /ready
    port: 8000
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

startupProbe:
  httpGet:
    path: /health
    port: 8000
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 30

# Metrics and monitoring
metrics:
  enabled: true
  port: 9090
  path: /metrics
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    labels: {}
    annotations: {}

# Node selection and affinity
nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - async-toolformer-orchestrator
          topologyKey: kubernetes.io/hostname

# Network Policy
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8000
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 9090
  egress:
    - to: []
      ports:
        - protocol: TCP
          port: 6379  # Redis
        - protocol: TCP
          port: 443   # HTTPS
        - protocol: TCP
          port: 53    # DNS
        - protocol: UDP
          port: 53    # DNS

# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# RBAC
rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["configmaps", "secrets"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["apps"]
      resources: ["deployments"]
      verbs: ["get", "list", "watch"]

# External dependencies
redis:
  enabled: true
  auth:
    enabled: true
    password: "changeme"
  master:
    persistence:
      enabled: true
      size: 8Gi
  replica:
    replicaCount: 2
    persistence:
      enabled: true
      size: 8Gi

prometheus:
  enabled: false  # Use external Prometheus

grafana:
  enabled: false  # Use external Grafana

# Backup configuration
backup:
  enabled: false
  schedule: "0 2 * * *"
  retention: "30d"
  s3:
    bucket: "async-toolformer-backups"
    region: "us-east-1"

# Migration and deployment
deployment:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  
  # Blue-green deployment support
  blueGreen:
    enabled: false
    activeService: "async-toolformer-orchestrator"
    previewService: "async-toolformer-orchestrator-preview"
    
  # Canary deployment support
  canary:
    enabled: false
    steps:
      - setWeight: 10
      - pause: {duration: 300}
      - setWeight: 30
      - pause: {duration: 300}
      - setWeight: 50
      - pause: {duration: 300}

# Testing and validation
tests:
  enabled: true
  image:
    repository: ghcr.io/yourusername/async-toolformer-orchestrator
    tag: "test"
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 256Mi