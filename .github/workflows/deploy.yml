name: "Production Deployment"
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "${{ github.repository }}"
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: "Setup Python"
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      -
        name: "Install dependencies"
        run: "pip install -r requirements.txt"
      -
        name: "Run quality gates"
        run: "python quality_gates_execution.py"
      -
        name: "Security scan"
        run: "bandit -r src/ || true"
  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: "Build Docker image"
        run: "docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ."
      -
        name: "Push to registry"
        run: "docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: "github.ref == 'refs/heads/main'"
    environment: staging
    steps:
      -
        name: "Deploy to staging"
        run: "helm upgrade --install async-toolformer-staging ./helm/async-toolformer --namespace staging"
  deploy-production:
    needs:
      - build
      - deploy-staging
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/v')"
    environment: production
    strategy:
      matrix:
        region:
          - us-east-1
          - eu-west-1
          - ap-southeast-1
    steps:
      -
        name: "Deploy to production"
        run: "helm upgrade --install async-toolformer ./helm/async-toolformer --namespace production --set image.tag=${{ github.ref_name }}"